# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: folioorg/example
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

resources:
  limits:
    # cpu: 100m
    memory: 256Mi
  requests:
    # cpu: 50m
    memory: 128Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 4
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Should be set to NodePort if ingress for AWS ALB enabled
service:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

args: []

## @param javaOpts Custom JVM parameters
##
javaOpts:
  - "-XX:MaxRAMPercentage=75.0"

extraJavaOpts: []
  # - "-Dlog_level=DEBUG"

extraEnvVars: []
  # - name: FOO
  #   value: bar

extraEnvVarsSecrets: []
  # = foo-secret
  # - bar-secret

jmx:
  enabled: false
  port: 1099

heapDumpEnabled: false

integrations:
  okapi:
    enabled: false
    host: okapi
    port: 9130
    url: http://okapi:9130
    existingSecret: ""

  db:
    enabled: false
    host: localhost
    hostReader: ""
    port: 5432
    database: folio
    username: folio
    password: folio
    charset: UTF-8
    querytimeout: ""
    maxpoolsize: ""
    existingSecret: ""

  kafka:
    enabled: false
    host: localhost
    port: 9092
    existingSecret: ""

  opensearch:
    enabled: false
    host: localhost
    port: 443
    url: https://localhost:443
    username: ""
    password: ""
    existingSecret: ""

  systemUser:
    enabled: false
    name: ""
    password: ""
    existingSecret: ""

  s3:
    enabled: false
    isAws: true
    sdk: ""
    url: "http://localhost"
    region: ""
    bucket: ""
    accessKeyId: ""
    secretAccessKey: ""
    forcepathstyle: ""
    existingSecret: ""

configMaps:
  ephemeral:
    enabled: false
    fileName: ephemeral.properties
    mountPath: /etc/edge
  log4j:
    enabled: false
    fileName: log4j2.xml
    mountPath: /etc/log4j2.xml

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

startupProbe: {}
readinessProbe: {}
livenessProbe: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
