{{- define "common.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainer }}
      initContainers:
      - name: {{ .Chart.Name }}-init
        image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
        imagePullPolicy: {{ .Values.initContainer.imagePullPolicy }}
        command: ["{{ .Values.initContainer.command }}"]
        {{- if .Values.initContainer.overrideArgs }}
        args: [
            {{- range $overrideArg := .Values.initContainer.overrideArgs }}
              "{{- tpl $overrideArg $ }}",
            {{- end }}
        ]
        {{- end }}
        {{- if .Values.initContainer.mountPath }}
        volumeMounts:
        - name: {{ .Chart.Name }}-init-volume
          mountPath: {{ .Values.initContainer.mountPath }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.overrideArgs }}
          args: [
            {{- range $overrideArg := .Values.overrideArgs }}
              "{{- tpl $overrideArg $ }}",
            {{- end }}
          ]
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.portName | default "http" }}
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
            {{- if .Values.jmxMetrics }}
            - name: {{ .Values.jmxMetrics.portName | default "jmx" }}
              containerPort: {{ .Values.jmxMetrics.containerPort | default 9991 }}
              protocol: TCP
            {{- end }}
          {{- if or (eq .Values.healthCheck nil) (.Values.healthCheck) }}
          {{- if or (eq .Values.livenessProbeEnabled nil) (.Values.livenessProbeEnabled) }}
          livenessProbe:
            httpGet:
              path: {{ if .Values.livenessProbe -}} {{ default "/admin/health" .Values.livenessProbe.path | quote }} {{- else -}} "/admin/health" {{- end }}
              port: {{ .Values.service.containerPort }}
            periodSeconds: {{ if .Values.livenessProbe -}} {{ default 60 .Values.livenessProbe.periodSeconds }} {{- else -}} 60 {{- end }}
            timeoutSeconds: {{ if .Values.livenessProbe -}} {{ default 60 .Values.livenessProbe.timeoutSeconds }} {{- else -}} 60 {{- end }}
          {{- end }}
          {{- if or (eq .Values.readinessProbeEnabled nil) (.Values.readinessProbeEnabled) }}
          readinessProbe:
            httpGet:
              path: {{ if .Values.readinessProbe -}} {{ default "/admin/health" .Values.readinessProbe.path | quote }} {{- else -}} "/admin/health" {{- end }}
              port: {{ .Values.service.containerPort }}
            periodSeconds: {{ if .Values.readinessProbe -}} {{ default 60 .Values.readinessProbe.periodSeconds }} {{- else -}} 60 {{- end }}
            timeoutSeconds: {{ if .Values.readinessProbe -}} {{ default 60 .Values.readinessProbe.timeoutSeconds }} {{- else -}} 60 {{- end }}
          {{- end }}
          {{- if .Values.startupProbeEnabled }}
          startupProbe:
            httpGet:
              path: {{ if .Values.startupProbe -}} {{ default "/admin/health" .Values.startupProbe.path | quote }} {{- else -}} "/admin/health" {{- end }}
              port: {{ .Values.service.containerPort }}
            periodSeconds: {{ if .Values.startupProbe -}} {{ default 60 .Values.startupProbe.periodSeconds }} {{- else -}} 60 {{- end }}
            timeoutSeconds: {{ if .Values.startupProbe -}} {{ default 60 .Values.startupProbe.timeoutSeconds }} {{- else -}} 60 {{- end }}
            failureThreshold: {{ if .Values.startupProbe -}} {{ default 10 .Values.startupProbe.failureThreshold }} {{- else -}} 10 {{- end }}
          {{- end }}
          {{- end }}
          volumeMounts: {{- include "helm.volumeMounts" . | indent 12 }}
          env:
          {{- if .Values.elasticSearchConnectParameters }}
            - name: ELASTICSEARCH_HOST
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_HOST
                  name: {{ .Values.elasticSearchConnectParameters }}
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_USERNAME
                  name: {{ .Values.elasticSearchConnectParameters }}
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_PASSWORD
                  name: {{ .Values.elasticSearchConnectParameters }}
            - name: ELASTICSEARCH_URL
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_URL
                  name: {{ .Values.elasticSearchConnectParameters }}
            - name: ELASTICSEARCH_PORT
              valueFrom:
                secretKeyRef:
                  key: ELASTICSEARCH_PORT
                  name: {{ .Values.elasticSearchConnectParameters }}
          {{- end }}  
          {{- if .Values.okapiConnectParameters }}
            - name: OKAPI_HOST
              valueFrom:
                secretKeyRef:
                  key: OKAPI_HOST
                  name: {{ .Values.okapiConnectParameters }}
            - name: OKAPI_PORT
              valueFrom:
                secretKeyRef:
                  key: OKAPI_PORT
                  name: {{ .Values.okapiConnectParameters }}
            - name: OKAPI_URL
              valueFrom:
                secretKeyRef:
                  key: OKAPI_URL
                  name: {{ .Values.okapiConnectParameters }}
          {{- end }}
          {{- if .Values.dbConnectParameters }}
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: DB_DATABASE
                  name: {{ .Values.dbConnectParameters }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: {{ .Values.dbConnectParameters }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: {{ .Values.dbConnectParameters }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: DB_PORT
                  name: {{ .Values.dbConnectParameters }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: {{ .Values.dbConnectParameters }}
            - name: ENV
              valueFrom:
                secretKeyRef:
                  key: ENV
                  name: {{ .Values.dbConnectParameters }}
          {{- end }}
          {{- if .Values.kafkaConnectParameters }}
            - name: KAFKA_HOST
              valueFrom:
                secretKeyRef:
                  key: KAFKA_HOST
                  name: {{ .Values.kafkaConnectParameters }}
            - name: KAFKA_PORT
              valueFrom:
                secretKeyRef:
                  key: KAFKA_PORT
                  name: {{ .Values.kafkaConnectParameters }}
          {{- end }}
          {{- if .Values.awsConnectParameters }}
            - name: AWS_URL
              valueFrom:
                secretKeyRef:
                  key: AWS_URL
                  name: {{ .Values.awsConnectParameters }}
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  key: AWS_REGION
                  name: {{ .Values.awsConnectParameters }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: {{ .Values.awsConnectParameters }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: {{ .Values.awsConnectParameters }}
            - name: AWS_BUCKET
              valueFrom:
                secretKeyRef:
                  key: AWS_BUCKET
                  name: {{ .Values.awsConnectParameters }}
          {{- end }}
          {{- if .Values.localFsBucketParameters }}
            - name: LOCAL_FS_URL
              valueFrom:
                secretKeyRef:
                  key: AWS_URL
                  name: {{ .Values.localFsBucketParameters }}
            - name: LOCAL_FS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: {{ .Values.localFsBucketParameters }}
            - name: LOCAL_FS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: {{ .Values.localFsBucketParameters }}
            - name: LOCAL_FS_BUCKET
              valueFrom:
                secretKeyRef:
                  key: LOCAL_FS_BUCKET
                  name: {{ .Values.localFsBucketParameters }}
            - name: LOCAL_FS_REGION
              valueFrom:
                secretKeyRef:
                  key: AWS_REGION
                  name: {{ .Values.localFsBucketParameters }}
          {{- end }}
          {{- with .Values.extraEnv }}
          {{- tpl . $ | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes: {{- include "helm.volumes" . | indent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}