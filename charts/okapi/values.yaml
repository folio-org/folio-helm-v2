# Default values for okapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: folioorg/okapi
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

resources:
  limits:
    # cpu: 100m
    memory: 1664Mi
  requests:
    # cpu: 100m
    memory: 1024Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 4
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Should be set to NodePort if ingress for AWS ALB enabled
service:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 9130
    containerPort: 9130
    targetPort: http
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /*
      pathType: ImplementationSpecific
      servicePort: 9130
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Okapi cmd argument https://github.com/folio-org/okapi/blob/master/doc/guide.md#command
args:
- dev
# - cluster
#  - -hazelcast-config-file
#  - /etc/hazelcast/hazelcast.xml

## @param javaOpts Custom JVM parameters
##
javaOpts:
- "-Dhost=okapi -Dokapiurl=http://okapi:9130 -Dstorage=postgres -Dpostgres_host=$(DB_HOST)"
- "-Dpostgres_database=$(DB_DATABASE) -Dpostgres_username=$(DB_USERNAME) -Dpostgres_password=$(DB_PASSWORD)"
- "-Ddeploy.waitIterations=90"
# Should be checked if this options required
# --add-modules java.se
# --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
# --add-opens java.base/java.lang=ALL-UNNAMED
# --add-opens java.base/java.nio=ALL-UNNAMED
# --add-opens java.base/sun.nio.ch=ALL-UNNAMED
# --add-opens java.management/sun.management=ALL-UNNAMED
# --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED

extraJavaOpts:
  - "-XX:MaxRAMPercentage=75.0"
# - "-Dlog_level=DEBUG"

extraEnvVars: []
# - name: FOO
#   value: bar

extraEnvVarsSecrets: []
# = foo-secret
# - bar-secret

jmx:
  enabled: false
  port: 1099

heapDumpEnabled: false

volumeClaims:
  extendedtmp:
    enabled: false
    name: &extendedtmp_name '{{ printf "%s-%s" (include "folio-common.fullname" $) "extendedtmp" }}'
    storageClassName: gp2
    size: 20Gi
    accessModes: ReadWriteOnce
    existingClaim:

extraVolumeMounts:
  hazelcast:
    enabled: true
    name: hazelcast-conf
    mountPath: /etc/hazelcast/hazelcast.xml
    subPath: hazelcast.xml
  heapdump:
    enabled: false
    name: heapdump
    mountPath: /tmp/dump
  extendedtmp:
    enabled: false
    name: extendedtmp
    mountPath: /tmp

extraVolumes:
  hazelcast:
    enabled: true
    name: hazelcast-conf
    configMap:
      name: okapi-hazelcast-conf
  heapdump:
    enabled: false
    name: heapdump
    emptyDir: {}
  extendedtmp:
    enabled: false
    name: extendedtmp
    persistentVolumeClaim:
      claimName: *extendedtmp_name

initContainer:
  enabled: false
  image:
    repository: busybox
    tag: latest
    pullPolicy: Always
    command: '["sh", "-c", "chown -R 1000:1000 /tmp"]'
  args:
  extraVolumeMounts:
    extendedtmp:
      enabled: false
      name: extendedtmp
      mountPath: /tmp

integrations:
  db:
    enabled: true
    host: postgresql
    hostReader: ""
    port: 5432
    database: folio
    username: folio
    password: folio
    charset: UTF-8
    querytimeout: ""
    maxpoolsize: ""
    existingSecret: ""

configMaps:
  log4j:
    enabled: true
    fileName: log4j2.xml
    mountPath: /etc/log4j2.xml
    existingConfig: ""

eureka: {}

hazelcastService:
  name: okapi-hazelcast
  port: 5701

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

startupProbe:
  httpGet:
    path: /_/proxy/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 15
  failureThreshold: 20
readinessProbe: {}
livenessProbe: {}

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
