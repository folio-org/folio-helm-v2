# Default values for mod-audit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: folioci/mod-fqm-manager
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 8081

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    #cpu: 128m
    memory: 512Mi
  requests:
    #cpu: 50m
    memory: 400Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# If need to create and attach ConfigMap add nedded parameters here
# And create folder configmaps. In folder create file with the same name that in this config.
# In file paste only data for configmap.
# config:
#   - name: sftp-config
#     subPath: users.conf
#     mountPath: /etc/sftp/users.conf

# volumeMounts:
#   secrets:
#     - name: secure-store-props
#       mountPath: /etc/edge
#       secretName: ephemeral-properties
#   emptyDirs:
#     - name: dumps-volume
#       mountPath: /dumps

dbMaxPoolSize: 5
javaOptions: -XX:MaxRAMPercentage=85.0
taskPoolSize: 10
taskPoolCoreSize: 9
taskPoolQueueCapacity: 1000
queryRetentionDuration: 3h

extraEnv: |
  - name: DB_MAXPOOLSIZE
    value: "{{ .Values.dbMaxPoolSize }}"
  - name: JAVA_OPTIONS
    value: {{ .Values.javaOptions }}
  - name: task.execution.pool.max-size
    value: "{{ .Values.TaskPoolSize }}"
  - name: task.execution.pool.core-size
    value: "{{ .Values.taskPoolCoreSize }}"
  - name: task.execution.pool.queue-capacity
    value: "{{ .Values.taskPoolQueueCapacity }}"
  - name: QUERY_RETENTION_DURATION
    value: {{ .Values.queryRetentionDuration }}

# Enable parameters for DB, Kafka or AWS connection. In value set name of secret
dbConnectParameters: db-connect-modules
# kafkaConnectParameters: db-connect-modules
awsConnectParameters: s3-credentials

# initContainer:
#   image:
#     repository: busybox
#     tag: latest
#   imagePullPolicy: Always
#   command: cat
#   overrideArgs:
#     - diku
#     - dkl
#   mountPath: /path

postJob:
  enabled: false
  okapiUrl: http://okapi:9130
  tenantId: diku
  sampleData: false
  referenceData: false
  image:
    repository: docker.dev.folio.org/folio-okapi-registration
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
